{
  "application_name": "Fedora Kernel Manager",
  "developer_name": "Cosmo",
  "banner_text_no_internet": "Warning: No internet connection",
  "banner_text_url_error": "Kernel Database URL Error: Please Restart!",
  "loading_label_label": "Downloading Database...",
  "kernel_branch_expander_row_subtitle": "Kernel Branch",
  "browse_kernels_button_tooltip_text": "Browse Kernel for select branch",
  "config_kernel_button_tooltip_text": "Configure Sched_EXT settings",
  "config_kernel_button_tooltip_text_no_scx": "Currently running kernel doesn't support Sched-EXT",
  "config_kernel_button_tooltip_text_no_scx_installed": "Your kernel supports Sched-EXT but the scx-scheds package is not installed!\nInstall it, reboot and try again",
  "null_checkbutton_label": "No branch selected",
  "db_load_complete": "DB load complete!",
  "db_downloading": "Downloading & Parsing package DB for",
  "db_download_complete": "Download Complete!",
  "db_init_script_run_p1": "Running",
  "db_init_script_run_p2": "init script.",
  "db_init_script_successful": "init script successful.",
  "db_init_script_failed": "init script failed!",
  "unknown": "Unknown",
  "disabled": "Disabled",
  "get_current_scheduler_sched_ext_detected": "sched_ext is detected, getting scx scheduler",
  "kernel_badge_branch_label": "Kernel Branch",
  "kernel_badge_latest_version_label": "Latest Version",
  "kernel_badge_running_version_label": "Running Version",
  "kernel_badge_running_kernel_label": "Running Kernel",
  "kernel_badge_running_sched_label": "Running Sched",
  "kernel_main_label_label": "Available Kernel Packages for",
  "kernel_status_icon_tooltip_text": "Installed",
  "kernel_install_button_label": "Install",
  "kernel_install_button_tooltip_text": "Install this kernel",
  "kernel_uninstall_button_label": "Uninstall",
  "kernel_uninstall_button_tooltip_text": "Uninstall this kernel",
  "kernel_install_dialog_heading": "Installing Kernel",
  "kernel_install_dialog_ok_label": "OK",
  "kernel_install_dialog_reboot_label": "Reboot Now (Optional)",
  "kernel_install_dialog_body_successful": "Kernel installation was successful!",
  "kernel_install_dialog_body_failed":  "Kernel installation failed!",
  "parse_loading_dialog_heading": "Please Wait!",
  "parse_loading_dialog_body": "Loading Kernel Repo Data....",
  "log_status_kernel_modify_successful": "Status: kernel modify Successful",
  "log_status_kernel_modify_failed": "Status: kernel modify Failed",
  "scx_sched_expander_row_subtitle": "Select Sched-EXT SCX Scheduler",
  "sched_ext_main_label_label": "Sched-EXT Configuration Settings",
  "sched_ext_apply_button_label": "Apply",
  "sched_ext_cmd_status_dialog_heading_success": "Success!",
  "sched_ext_cmd_status_dialog_body_success": "SCX has been set to",
  "sched_ext_cmd_status_dialog_heading_failed": "Failed!",
  "sched_ext_cmd_status_dialog_body_failed": "SCX wasn't able to be set to",
  "sched_ext_null_checkbutton_label": "No Scheduler selected",
    "scx_flash_description": "A scheduler designed for multimedia and real-time audio processing workloads.",
    "scx_rusty_description": "Rusty is designed to be flexible, accommodating different architectures and workloads. Various load balancing thresholds (e.g. greediness, frequency, etc), as well as how Rusty should partition the system into scheduling domains, can be tuned to achieve the optimal configuration for any given system or workload.",
    "scx_nest_description": "The core idea of the scheduler is to make scheduling decisions which encourage work to run on cores that are expected to have high frequency. This scheduler currently will only perform well on single CCX / single-socket hosts.",
    "low_latency_mode_description": "Meant to lower latency at the cost of throughput. Suitable for real-time applications like Audio Processing and Multimedia.",
    "scx_central_description": "This scheduler could theoretically be useful for any workload that benefits from minimizing scheduling overhead and timer ticks. (Good for VMs)",
    "scx_lavd_description": "scx_lavd is initially motivated by gaming workloads. It aims to improve interactivity and reduce stuttering while playing games on Linux.",
    "scx_rustland_description": "scx_rustland is designed to prioritize interactive workloads over background CPU-intensive workloads. For this reason the typical use case of this scheduler involves low-latency interactive applications, such as gaming, video conferencing and live streaming.",
    "scx_sched_mode_expander_row_subtitle": "SCX Scheduler Mode",
    "scx_disabled_description": "Disable SCX and use default kernel scheduler",
    "scx_userland_description": "A simple weighted vtime scheduler where all scheduling decisions take place in user space. This is in contrast to Rusty, where load balancing lives in user space, but scheduling decisions are still made in the kernel.",
    "scx_sched_mode_extra_flags_entry_row_title": "SCX Scheduler Flags",
    "scx_bpfland_description": "A vruntime-based sched_ext scheduler that prioritizes interactive workloads.",
    "scx_p2dq_description": "A simple pick 2 load balancing scheduler with (dumb) multi-layer queueing.\np2dq can perform well in a variety of workloads including interactive workloads such as gaming, batch processing and server applications. Tuning of of p2dq for each use case is required.",
    "scx_layered_description": "A highly configurable multi-layer BPF / user space hybrid scheduler.",
    "scx_qmap_description": "Another simple, yet slightly more complex scheduler that provides an example of a basic weighted FIFO queuing policy.",
    "scx_rlfifo_description": "A simple FIFO scheduler in Rust that runs in user-space.",
    "default_mode_description": "Scheduler Default Flags",
    "gaming_mode_description": "Optimizes for high performance in games. Prioritizes P-cores over E-cores on Intel CPUs and CCDs on Ryzen X3D CPUs.",
    "powersave_mode_description": "Prioritizes power efficiency. Favors less performant cores (e.g E-cores on Intel).",
    "server_mode_description": "Disables the interactive task classification in Bpfland making more capable for a server, an increase of approximately 2-3% in server workloads is expected",
    "performance_mode_description": "Maximizes performance by using all available cores, prioritizing physical cores.",
    "scx_tickless_description": "scx_tickless is a server-oriented scheduler designed for cloud computing, virtualization, and high-performance computing workloads.",
    "sched_ext_mode_default_checkbutton_label": "default"
}
